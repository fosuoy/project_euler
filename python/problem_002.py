#!/usr/bin/env python3
import time

def blurb():
  print("""

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

  """)

def find_fibonacci_sequence(LIMIT):
  fibonacci_sequence  = {1,2}
  OLD_MAX = 1
  while max(fibonacci_sequence) < LIMIT:
    CURRENT_MAX = max(fibonacci_sequence)
    NEXT        = CURRENT_MAX + OLD_MAX
    OLD_MAX     = CURRENT_MAX
    fibonacci_sequence.add(NEXT)
  fibonacci_sequence.remove(max(fibonacci_sequence))
  RESULT = [x for x in fibonacci_sequence if x % 2 == 0]
  return RESULT


def main():
  start  = time.time()
  LIMIT  = 4000000
  RESULT = sum(find_fibonacci_sequence(LIMIT))
  end    = time.time() - start

  print("Result: %s"      % RESULT)
  print("Completed in %s" % end)

if __name__ == '__main__':
  main()
