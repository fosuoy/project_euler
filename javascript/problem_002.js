#!/usr/bin/env node

function printBlurb() {
    var blurb = `
    Each new term in the Fibonacci sequence is generated by adding the previous
    two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not
    exceed four million, find the sum of the even-valued terms.
    `
    console.log(blurb)
}

function fibonacciSequence(upperBound, previous, next) {
    if (previous > upperBound) {
        return [0]
    } else {
        return [previous].concat(fibonacciSequence(upperBound,
                                                   next,
                                                   next + previous))
    }
}

function sum_even_numbers_in_list(list) {
    var sum = 0
    for (var i = 0 ; i < list.length ; i ++) {
        number = list[i]
        if (number % 2 == 0) {
            sum += number
        }
    }
    return sum
}

function problem_002(upperBound) {
    var fibonacciNumbers = fibonacciSequence(upperBound, 0, 1)
    var result = sum_even_numbers_in_list(fibonacciNumbers)
    return result
}

printBlurb()
console.time('Completed in')
result = problem_002(4000000)
console.log(`Result: ${result}`)
console.timeEnd('Completed in')
